name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install latest stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install latest nightly Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: rustfmt

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        toolchain: nightly
        args: --check

    - name: Install libsdl2 and libgtk-3
      run: |
        sudo apt-get update && sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev libgtk-3-dev

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build

    - name: Get latest cranky version
      id: get-cranky-version
      run: |
        cargo search cargo-cranky | head -1 | cut -d' ' -f3 | sed -re 's/"(.*)"/version=\1/g' >> $GITHUB_OUTPUT

    - name: Cache cranky binary
      id: cranky-cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo/bin/cargo-cranky
        key: ${{ runner.os }}-${{ steps.get-cranky-version.outputs.version }}

    - name: Install cranky
      if: steps.cranky-cache.outputs.cache-hit != 'true'
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-cranky --version ${{ steps.get-cranky-version.outputs.version }}

    - name: Check Clippy warnings
      uses: actions-rs/cargo@v1
      with:
        command: cranky
        args: -- -D warnings

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Get latest tarpaulin version
      id: get-tarpaulin-version
      run: |
        cargo search cargo-tarpaulin | head -1 | cut -d' ' -f3 | sed -re 's/"(.*)"/version=\1/g' >> $GITHUB_OUTPUT

    - name: Cache tarpaulin binary
      id: tarpaulin-cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo/bin/cargo-tarpaulin
        key: ${{ runner.os }}-${{ steps.get-tarpaulin-version.outputs.version }}

    - name: Install tarpaulin
      if: steps.tarpaulin-cache.outputs.cache-hit != 'true'
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-tarpaulin --version ${{ steps.get-tarpaulin-version.outputs.version }}

    - name: Generate code coverage report
      uses: actions-rs/cargo@v1
      with:
        command: tarpaulin
  linux-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install libsdl2 and libgtk-3
        run: |
          sudo apt-get update && sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev libgtk-3-dev

      - name: Build release
        run: |
          RUSTFLAGS="-Clink-args=-Wl,-rpath=." \
          cargo build --profile release-lto

      - name: Compress binaries
        run: |
          cp /lib/x86_64-linux-gnu/libSDL2_ttf-2.0.so.0 ./ && \
          tar -czvf jgb-linux.tar.gz LICENSE libSDL2_ttf-2.0.so.0 -C target/release-lto jgb-cli jgb-gui

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64-bin
          path: jgb-linux.tar.gz
          retention-days: 1
  windows-release:
    runs-on: ubuntu-latest

    env:
      SDL_VERSION: 2.26.4
      SDL_TTF_VERSION: 2.20.2

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install mingw32
        run: |
          sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Install Windows x64 Rust build target
        run: |
          rustup target add x86_64-pc-windows-gnu
      
      - name: Download & extract Windows SDL2 libraries
        run: |
          wget https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL2-devel-$SDL_VERSION-mingw.tar.gz && \
          wget https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL2-$SDL_VERSION-win32-x64.zip && \
          wget https://github.com/libsdl-org/SDL_ttf/releases/download/release-$SDL_TTF_VERSION/SDL2_ttf-devel-$SDL_TTF_VERSION-mingw.tar.gz && \
          wget https://github.com/libsdl-org/SDL_ttf/releases/download/release-$SDL_TTF_VERSION/SDL2_ttf-$SDL_TTF_VERSION-win32-x64.zip && \
          tar -xzvf SDL2-devel-$SDL_VERSION-mingw.tar.gz && \
          tar -xzvf SDL2_ttf-devel-$SDL_TTF_VERSION-mingw.tar.gz && \
          unzip SDL2-$SDL_VERSION-win32-x64.zip && \
          unzip SDL2_ttf-$SDL_TTF_VERSION-win32-x64.zip

      - name: Build release
        run: |
          RUSTFLAGS="-Clink-arg=-ISDL2-$SDL_VERSION/x86_64-w64-mingw32/include -Clink-arg=-LSDL2-$SDL_VERSION/x86_64-w64-mingw32/lib -Clink-arg=-ISDL2_ttf-$SDL_TTF_VERSION/x86_64-w64-mingw32/include -Clink-arg=-LSDL2_ttf-$SDL_TTF_VERSION/x86_64-w64-mingw32/lib" \
          cargo build --profile release-lto --target x86_64-pc-windows-gnu

      - name: Compress binaries
        run: |
          mv target/x86_64-pc-windows-gnu/release-lto/*.exe ./ && \
          zip -r jgb-windows.zip LICENSE README-SDL.txt SDL2.dll SDL2_ttf.dll jgb-cli.exe jgb-gui.exe

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: windows-x86_64-bin
          path: jgb-windows.zip
          retention-days: 1
